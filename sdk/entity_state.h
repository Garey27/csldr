typedef struct
{
	int entityType;
	int number;
	float msg_time;
	int messagenum;
	vec3_t origin;
	vec3_t angles;
	int modelindex;
	int sequence;
	float frame;
	int colormap;
	short skin;
	short solid;
	int effects;
	float scale;
	byte eflags;
	int rendermode;
	int renderamt;
	color24 rendercolor;
	int renderfx;
	int movetype;
	float animtime;
	float framerate;
	int body;
	byte controller[4];
	byte blending[4];
	vec3_t velocity;
	vec3_t mins;
	vec3_t maxs;
	int aiment;
	int owner;
	float friction;
	float gravity;
	int team;
	int playerclass;
	int health;
	qboolean spectator;
	int weaponmodel;
	int gaitsequence;
	vec3_t basevelocity;
	int usehull;
	int oldbuttons;
	int onground;
	int iStepLeft;
	float flFallVelocity;
	float fov;
	int weaponanim;
	vec3_t startpos;
	vec3_t endpos;
	float impacttime;
	float starttime;
	int iuser1;
	int iuser2;
	int iuser3;
	int iuser4;
	float fuser1;
	float fuser2;
	float fuser3;
	float fuser4;
	vec3_t vuser1;
	vec3_t vuser2;
	vec3_t vuser3;
	vec3_t vuser4;
} entity_state_t;

typedef struct
{
	vec3_t origin;
	vec3_t velocity;
	int viewmodel;
	vec3_t punchangle;
	int flags;
	int waterlevel;
	int watertype;
	vec3_t view_ofs;
	float health;
	int bInDuck;
	int weapons;
	int flTimeStepSound;
	int flDuckTime;
	int flSwimTime;
	int waterjumptime;
	float maxspeed;
	float fov;
	int weaponanim;
	int m_iId;
	int ammo_shells;
	int ammo_nails;
	int ammo_cells;
	int ammo_rockets;
	float m_flNextAttack;
	int tfstate;
	int pushmsec;
	int deadflag;
	char physinfo[256];
	int iuser1;
	int iuser2;
	int iuser3;
	int iuser4;
	float fuser1;
	float fuser2;
	float fuser3;
	float fuser4;
	vec3_t vuser1;
	vec3_t vuser2;
	vec3_t vuser3;
	vec3_t vuser4;
} clientdata_t;

typedef struct
{
	entity_state_t playerstate;
	clientdata_t client;
	weapon_data_t weapondata[64];
} local_state_t;
