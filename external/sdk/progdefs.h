typedef struct
{
  string_t classname;
  string_t globalname;
  Vector origin;
  Vector oldorigin;
  Vector velocity;
  Vector basevelocity;
  Vector clbasevelocity;
  Vector movedir;
  Vector angles;
  Vector avelocity;
  Vector punchangle;
  Vector v_angle;
  Vector endpos;
  Vector startpos;
  float impacttime;
  float starttime;
  int fixangle;
  float idealpitch;
  float pitch_speed;
  float ideal_yaw;
  float yaw_speed;
  int modelindex;
  string_t model;
  int viewmodel;
  int weaponmodel;
  Vector absmin;
  Vector absmax;
  Vector mins;
  Vector maxs;
  Vector size;
  float ltime;
  float nextthink;
  int movetype;
  int solid;
  int skin;
  int body;
  int effects;
  float gravity;
  float friction;
  int light_level;
  int sequence;
  int gaitsequence;
  float frame;
  float animtime;
  float framerate;
  unsigned char controller[4];
  unsigned char blending[2];
  float scale;
  int rendermode;
  float renderamt;
  Vector rendercolor;
  int renderfx;
  float health;
  float frags;
  int weapons;
  float takedamage;
  int deadflag;
  Vector view_ofs;
  int button;
  int impulse;
  struct edict_s* chain;
  struct edict_s* dmg_inflictor;
  struct edict_s* enemy;
  struct edict_s* aiment;
  struct edict_s* owner;
  struct edict_s* groundentity;
  int spawnflags;
  int flags;
  int colormap;
  int team;
  float max_health;
  float teleport_time;
  float armortype;
  float armorvalue;
  int waterlevel;
  int watertype;
  string_t target;
  string_t targetname;
  string_t netname;
  string_t message;
  float dmg_take;
  float dmg_save;
  float dmg;
  float dmgtime;
  string_t noise;
  string_t noise1;
  string_t noise2;
  string_t noise3;
  float speed;
  float air_finished;
  float pain_finished;
  float radsuit_finished;
  struct edict_s* pContainingEntity;
  int playerclass;
  float maxspeed;
  float fov;
  int weaponanim;
  int pushmsec;
  int bInDuck;
  int flTimeStepSound;
  int flSwimTime;
  int flDuckTime;
  int iStepLeft;
  float flFallVelocity;
  int gamestate;
  int oldbuttons;
  int groupinfo;
  int iuser1;
  int iuser2;
  int iuser3;
  int iuser4;
  float fuser1;
  float fuser2;
  float fuser3;
  float fuser4;
  Vector vuser1;
  Vector vuser2;
  Vector vuser3;
  Vector vuser4;
  struct edict_s* euser1;
  struct edict_s* euser2;
  struct edict_s* euser3;
  struct edict_s* euser4;
} entvars_t;
